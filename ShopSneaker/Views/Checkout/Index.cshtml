@model OrderViewModel;
@{
    ViewData["Title"] = "Index";
}

<head>
    <link href="css/checkout.css" rel="stylesheet">
    <link href="css/custom.css" rel="stylesheet">
</head>


<div class="container margin_30">
<div class="page_header">
	<div class="breadcrumbs">
		<ul>
			<li>
				<a href="#">Home</a>
			</li>
			<li>
				<a href="#">Category</a>
			</li>
			<li>Page active</li>
		</ul>
	</div>
	<h1>Sign In or Create an Account</h1>

</div>
<!-- /page_header -->
<div class="row">
<div class="col-lg-4 col-md-6">
	<div class="step first">
		<h3>1. User Info and Billing address</h3>
		<ul class="nav nav-tabs" id="tab_checkout" role="tablist">
			<li class="nav-item">
				<a class="nav-link active" id="home-tab" data-bs-toggle="tab" href="#tab_1" role="tab" aria-controls="tab_1" aria-selected="true">Info</a>
			</li>
		</ul>
		<form asp-action="CreateOrder" asp-controller="Checkout" method="post">
			<div class="tab-content checkout">
			<div class="tab-pane fade show active" id="tab_1" role="tabpanel" aria-labelledby="tab_1">
				<div class="form-group">
					<input type="email" class="form-control" placeholder="Email" asp-for="Email">
				</div>
				<div class="form-group">
					<input type="text" class="form-control" placeholder="FullName" asp-for="Fullname">
				</div>
				<hr>
				<div class="form-group">
					<input type="text" class="form-control" placeholder="Full Address" asp-for="Address">
				</div>
				<div class="form-group">
					<input type="text" class="form-control" placeholder="Phone" asp-for="PhoneNumber">
				</div>
				<div class="row no-gutters">
					<div class="col-4 form-group pr-1">
						<select asp-for="City" id="city">
							<option value="" selected="selected">Select City</option>
						</select>
					</div>
					<div class="col-4 form-group pl-1">
						<select asp-for="District" id="district">
							<option value="" selected="selected">Select District</option>
						</select>
					</div>
					<div class="col-4 form-group pl-1">
						<select asp-for="Ward" id="ward">
							<option value="" selected="selected">Select Ward</option>
						</select>
					</div>
					<input hidden="hidden" asp-for="UserId"/>
					<input hidden="hidden" asp-for="Amount"/>
				</div>
				<!-- /row -->
				<button type="submit" class="btn_1 full-width">Confirm and Pay</button>
				<hr>
			</div>
			<!-- /tab_1 -->
		</div>
		</form>
	</div>
	<!-- /step -->
</div>
<div class="col-lg-4 col-md-6">
	<div class="step last">
		<h3>2. Order Summary</h3>
		<div class="box_general summary">
			@foreach (var cart in Model.Carts)
			{
				<ul>
					<li class="clearfix">
						<em>x@cart.Quantity @cart.ProductName</em> <span>$@cart.Price</span>
					</li>
				</ul>
			}
			<div class="total clearfix">TOTAL <span>$@Model.Carts.Sum(x => x.TotalPrice)</span></div>
			<div class="form-group">
				<label class="container_check">
					Register to the Newsletter.
					<input type="checkbox" checked>
					<span class="checkmark"></span>
				</label>
			</div>
			
		</div>
		<!-- /box_general -->
	</div>
	<!-- /step -->
</div>
</div>
<!-- /row -->
</div>
<!-- /box_cart -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
    <script>
        var citis = document.getElementById("city");
        var districts = document.getElementById("district");
        var wards = document.getElementById("ward");
        var Parameter = {
            url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
            method: "GET",
            responseType: "application/json",
        };
        var promise = axios(Parameter);
        promise.then(function (result) {
            renderCity(result.data);
        });

        function renderCity(data) {
            for (const x of data) {
                var opt = document.createElement('option');
                opt.value = x.Name;
                opt.text = x.Name;
                opt.setAttribute('data-id', x.Id);
                citis.options.add(opt);
            }
            citis.onchange = function () {
                district.length = 1;
                ward.length = 1;
                if (this.options[this.selectedIndex].dataset.id != "") {
                    const result = data.filter(n => n.Id === this.options[this.selectedIndex].dataset.id);

                    for (const k of result[0].Districts) {
                        var opt = document.createElement('option');
                        opt.value = k.Name;
                        opt.text = k.Name;
                        opt.setAttribute('data-id', k.Id);
                        district.options.add(opt);
                    }
                }
            };
            district.onchange = function () {
                ward.length = 1;
                const dataCity = data.filter((n) => n.Id === citis.options[citis.selectedIndex].dataset.id);
                if (this.options[this.selectedIndex].dataset.id != "") {
                    const dataWards = dataCity[0].Districts.filter(n => n.Id === this.options[this.selectedIndex].dataset.id)[0].Wards;

                    for (const w of dataWards) {
                        var opt = document.createElement('option');
                        opt.value = w.Name;
                        opt.text = w.Name;
                        opt.setAttribute('data-id', w.Id);
                        wards.options.add(opt);
                    }
                }
            };
        }
    </script>